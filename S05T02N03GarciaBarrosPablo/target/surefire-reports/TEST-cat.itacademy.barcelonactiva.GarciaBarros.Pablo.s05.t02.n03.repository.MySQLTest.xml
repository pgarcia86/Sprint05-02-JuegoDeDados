<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="cat.itacademy.barcelonactiva.GarciaBarros.Pablo.s05.t02.n03.repository.MySQLTest" time="4.45" tests="9" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="19"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\pgarc\eclipse-workspace\Sprint05-02-JuegoDeDados\S05T02N03GarciaBarrosPablo\target\test-classes;C:\Users\pgarc\eclipse-workspace\Sprint05-02-JuegoDeDados\S05T02N03GarciaBarrosPablo\target\classes;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.1.2\spring-boot-starter-data-jpa-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.1.2\spring-boot-starter-aop-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.1.2\spring-boot-starter-jdbc-3.1.2.jar;C:\Users\pgarc\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-jdbc\6.0.11\spring-jdbc-6.0.11.jar;C:\Users\pgarc\.m2\repository\org\hibernate\orm\hibernate-core\6.2.6.Final\hibernate-core-6.2.6.Final.jar;C:\Users\pgarc\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\pgarc\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\pgarc\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\pgarc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\pgarc\.m2\repository\io\smallrye\jandex\3.0.5\jandex-3.0.5.jar;C:\Users\pgarc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\pgarc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.3\jaxb-runtime-4.0.3.jar;C:\Users\pgarc\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.3\jaxb-core-4.0.3.jar;C:\Users\pgarc\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\pgarc\.m2\repository\org\glassfish\jaxb\txw2\4.0.3\txw2-4.0.3.jar;C:\Users\pgarc\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\pgarc\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\pgarc\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\pgarc\.m2\repository\org\springframework\data\spring-data-jpa\3.1.2\spring-data-jpa-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\data\spring-data-commons\3.1.2\spring-data-commons-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-orm\6.0.11\spring-orm-6.0.11.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-context\6.0.11\spring-context-6.0.11.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-tx\6.0.11\spring-tx-6.0.11.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-beans\6.0.11\spring-beans-6.0.11.jar;C:\Users\pgarc\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\pgarc\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-aspects\6.0.11\spring-aspects-6.0.11.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter-data-mongodb\3.1.2\spring-boot-starter-data-mongodb-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter\3.1.2\spring-boot-starter-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.1.2\spring-boot-starter-logging-3.1.2.jar;C:\Users\pgarc\.m2\repository\ch\qos\logback\logback-classic\1.4.8\logback-classic-1.4.8.jar;C:\Users\pgarc\.m2\repository\ch\qos\logback\logback-core\1.4.8\logback-core-1.4.8.jar;C:\Users\pgarc\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.20.0\log4j-to-slf4j-2.20.0.jar;C:\Users\pgarc\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\pgarc\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\pgarc\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\pgarc\.m2\repository\org\mongodb\mongodb-driver-sync\4.9.1\mongodb-driver-sync-4.9.1.jar;C:\Users\pgarc\.m2\repository\org\mongodb\bson\4.9.1\bson-4.9.1.jar;C:\Users\pgarc\.m2\repository\org\mongodb\mongodb-driver-core\4.9.1\mongodb-driver-core-4.9.1.jar;C:\Users\pgarc\.m2\repository\org\mongodb\bson-record-codec\4.9.1\bson-record-codec-4.9.1.jar;C:\Users\pgarc\.m2\repository\org\springframework\data\spring-data-mongodb\4.1.2\spring-data-mongodb-4.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-expression\6.0.11\spring-expression-6.0.11.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter-data-mongodb-reactive\3.1.2\spring-boot-starter-data-mongodb-reactive-3.1.2.jar;C:\Users\pgarc\.m2\repository\io\projectreactor\reactor-core\3.5.8\reactor-core-3.5.8.jar;C:\Users\pgarc\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\pgarc\.m2\repository\org\mongodb\mongodb-driver-reactivestreams\4.9.1\mongodb-driver-reactivestreams-4.9.1.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.1.2\spring-boot-starter-web-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.1.2\spring-boot-starter-json-3.1.2.jar;C:\Users\pgarc\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.2\jackson-datatype-jdk8-2.15.2.jar;C:\Users\pgarc\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.2\jackson-datatype-jsr310-2.15.2.jar;C:\Users\pgarc\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.2\jackson-module-parameter-names-2.15.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.1.2\spring-boot-starter-tomcat-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.11\tomcat-embed-core-10.1.11.jar;C:\Users\pgarc\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.11\tomcat-embed-el-10.1.11.jar;C:\Users\pgarc\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.11\tomcat-embed-websocket-10.1.11.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-web\6.0.11\spring-web-6.0.11.jar;C:\Users\pgarc\.m2\repository\io\micrometer\micrometer-observation\1.11.2\micrometer-observation-1.11.2.jar;C:\Users\pgarc\.m2\repository\io\micrometer\micrometer-commons\1.11.2\micrometer-commons-1.11.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-webmvc\6.0.11\spring-webmvc-6.0.11.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-devtools\3.1.2\spring-boot-devtools-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot\3.1.2\spring-boot-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.1.2\spring-boot-autoconfigure-3.1.2.jar;C:\Users\pgarc\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.1.2\spring-boot-starter-test-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-test\3.1.2\spring-boot-test-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.1.2\spring-boot-test-autoconfigure-3.1.2.jar;C:\Users\pgarc\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\pgarc\.m2\repository\net\minidev\json-smart\2.4.11\json-smart-2.4.11.jar;C:\Users\pgarc\.m2\repository\net\minidev\accessors-smart\2.4.11\accessors-smart-2.4.11.jar;C:\Users\pgarc\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\pgarc\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\pgarc\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\pgarc\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.3\junit-jupiter-5.9.3.jar;C:\Users\pgarc\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\pgarc\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\pgarc\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\pgarc\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\pgarc\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.3\junit-jupiter-params-5.9.3.jar;C:\Users\pgarc\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\pgarc\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\pgarc\.m2\repository\org\mockito\mockito-junit-jupiter\5.3.1\mockito-junit-jupiter-5.3.1.jar;C:\Users\pgarc\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\pgarc\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-core\6.0.11\spring-core-6.0.11.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-jcl\6.0.11\spring-jcl-6.0.11.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-test\6.0.11\spring-test-6.0.11.jar;C:\Users\pgarc\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.1.2\spring-boot-starter-security-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-aop\6.0.11\spring-aop-6.0.11.jar;C:\Users\pgarc\.m2\repository\org\springframework\security\spring-security-config\6.1.2\spring-security-config-6.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\security\spring-security-core\6.1.2\spring-security-core-6.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\security\spring-security-crypto\6.1.2\spring-security-crypto-6.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\security\spring-security-web\6.1.2\spring-security-web-6.1.2.jar;C:\Users\pgarc\.m2\repository\io\jsonwebtoken\jjwt\0.9.1\jjwt-0.9.1.jar;C:\Users\pgarc\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\pgarc\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.2\jackson-annotations-2.15.2.jar;C:\Users\pgarc\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\pgarc\.m2\repository\org\projectlombok\lombok\1.18.28\lombok-1.18.28.jar;C:\Users\pgarc\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\pgarc\.m2\repository\org\mockito\mockito-core\5.3.1\mockito-core-5.3.1.jar;C:\Users\pgarc\.m2\repository\net\bytebuddy\byte-buddy\1.14.5\byte-buddy-1.14.5.jar;C:\Users\pgarc\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.5\byte-buddy-agent-1.14.5.jar;C:\Users\pgarc\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\pgarc\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\pgarc\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\pgarc\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\pgarc\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\pgarc\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\pgarc\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\pgarc\.m2\repository\de\flapdoodle\embed\de.flapdoodle.embed.mongo\4.7.1\de.flapdoodle.embed.mongo-4.7.1.jar;C:\Users\pgarc\.m2\repository\de\flapdoodle\embed\de.flapdoodle.embed.process\4.7.1\de.flapdoodle.embed.process-4.7.1.jar;C:\Users\pgarc\.m2\repository\de\flapdoodle\reverse\de.flapdoodle.reverse\1.5.3\de.flapdoodle.reverse-1.5.3.jar;C:\Users\pgarc\.m2\repository\de\flapdoodle\graph\de.flapdoodle.graph\1.2.3\de.flapdoodle.graph-1.2.3.jar;C:\Users\pgarc\.m2\repository\org\jgrapht\jgrapht-core\1.4.0\jgrapht-core-1.4.0.jar;C:\Users\pgarc\.m2\repository\org\jheaps\jheaps\0.11\jheaps-0.11.jar;C:\Users\pgarc\.m2\repository\de\flapdoodle\java8\de.flapdoodle.java8\1.3.2\de.flapdoodle.java8-1.3.2.jar;C:\Users\pgarc\.m2\repository\org\apache\commons\commons-lang3\3.12.0\commons-lang3-3.12.0.jar;C:\Users\pgarc\.m2\repository\org\apache\commons\commons-compress\1.23.0\commons-compress-1.23.0.jar;C:\Users\pgarc\.m2\repository\net\java\dev\jna\jna\5.13.0\jna-5.13.0.jar;C:\Users\pgarc\.m2\repository\net\java\dev\jna\jna-platform\5.13.0\jna-platform-5.13.0.jar;C:\Users\pgarc\.m2\repository\de\flapdoodle\de.flapdoodle.os-api\1.4.1\de.flapdoodle.os-api-1.4.1.jar;C:\Users\pgarc\.m2\repository\de\flapdoodle\embed\de.flapdoodle.embed.mongo.packageresolver\4.6.2\de.flapdoodle.embed.mongo.packageresolver-4.6.2.jar;C:\Users\pgarc\.m2\repository\de\flapdoodle\de.flapdoodle.os\1.4.1\de.flapdoodle.os-1.4.1.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Europe/Madrid"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="19"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="ES"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-19\bin"/>
    <property name="sun.java.command" value="C:\Users\pgarc\AppData\Local\Temp\surefire12513639979341486411\surefirebooter-20230729132157558_3.jar C:\Users\pgarc\AppData\Local\Temp\surefire12513639979341486411 2023-07-29T13-21-57_417-jvmRun1 surefire-20230729132157558_1tmp surefire_0-20230729132157558_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\pgarc\eclipse-workspace\Sprint05-02-JuegoDeDados\S05T02N03GarciaBarrosPablo\target\test-classes;C:\Users\pgarc\eclipse-workspace\Sprint05-02-JuegoDeDados\S05T02N03GarciaBarrosPablo\target\classes;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.1.2\spring-boot-starter-data-jpa-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.1.2\spring-boot-starter-aop-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.1.2\spring-boot-starter-jdbc-3.1.2.jar;C:\Users\pgarc\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-jdbc\6.0.11\spring-jdbc-6.0.11.jar;C:\Users\pgarc\.m2\repository\org\hibernate\orm\hibernate-core\6.2.6.Final\hibernate-core-6.2.6.Final.jar;C:\Users\pgarc\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\pgarc\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\pgarc\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\pgarc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\pgarc\.m2\repository\io\smallrye\jandex\3.0.5\jandex-3.0.5.jar;C:\Users\pgarc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\pgarc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.3\jaxb-runtime-4.0.3.jar;C:\Users\pgarc\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.3\jaxb-core-4.0.3.jar;C:\Users\pgarc\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\pgarc\.m2\repository\org\glassfish\jaxb\txw2\4.0.3\txw2-4.0.3.jar;C:\Users\pgarc\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\pgarc\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\pgarc\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\pgarc\.m2\repository\org\springframework\data\spring-data-jpa\3.1.2\spring-data-jpa-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\data\spring-data-commons\3.1.2\spring-data-commons-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-orm\6.0.11\spring-orm-6.0.11.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-context\6.0.11\spring-context-6.0.11.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-tx\6.0.11\spring-tx-6.0.11.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-beans\6.0.11\spring-beans-6.0.11.jar;C:\Users\pgarc\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\pgarc\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-aspects\6.0.11\spring-aspects-6.0.11.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter-data-mongodb\3.1.2\spring-boot-starter-data-mongodb-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter\3.1.2\spring-boot-starter-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.1.2\spring-boot-starter-logging-3.1.2.jar;C:\Users\pgarc\.m2\repository\ch\qos\logback\logback-classic\1.4.8\logback-classic-1.4.8.jar;C:\Users\pgarc\.m2\repository\ch\qos\logback\logback-core\1.4.8\logback-core-1.4.8.jar;C:\Users\pgarc\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.20.0\log4j-to-slf4j-2.20.0.jar;C:\Users\pgarc\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\pgarc\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\pgarc\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\pgarc\.m2\repository\org\mongodb\mongodb-driver-sync\4.9.1\mongodb-driver-sync-4.9.1.jar;C:\Users\pgarc\.m2\repository\org\mongodb\bson\4.9.1\bson-4.9.1.jar;C:\Users\pgarc\.m2\repository\org\mongodb\mongodb-driver-core\4.9.1\mongodb-driver-core-4.9.1.jar;C:\Users\pgarc\.m2\repository\org\mongodb\bson-record-codec\4.9.1\bson-record-codec-4.9.1.jar;C:\Users\pgarc\.m2\repository\org\springframework\data\spring-data-mongodb\4.1.2\spring-data-mongodb-4.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-expression\6.0.11\spring-expression-6.0.11.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter-data-mongodb-reactive\3.1.2\spring-boot-starter-data-mongodb-reactive-3.1.2.jar;C:\Users\pgarc\.m2\repository\io\projectreactor\reactor-core\3.5.8\reactor-core-3.5.8.jar;C:\Users\pgarc\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\pgarc\.m2\repository\org\mongodb\mongodb-driver-reactivestreams\4.9.1\mongodb-driver-reactivestreams-4.9.1.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.1.2\spring-boot-starter-web-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.1.2\spring-boot-starter-json-3.1.2.jar;C:\Users\pgarc\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.2\jackson-datatype-jdk8-2.15.2.jar;C:\Users\pgarc\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.2\jackson-datatype-jsr310-2.15.2.jar;C:\Users\pgarc\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.2\jackson-module-parameter-names-2.15.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.1.2\spring-boot-starter-tomcat-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.11\tomcat-embed-core-10.1.11.jar;C:\Users\pgarc\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.11\tomcat-embed-el-10.1.11.jar;C:\Users\pgarc\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.11\tomcat-embed-websocket-10.1.11.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-web\6.0.11\spring-web-6.0.11.jar;C:\Users\pgarc\.m2\repository\io\micrometer\micrometer-observation\1.11.2\micrometer-observation-1.11.2.jar;C:\Users\pgarc\.m2\repository\io\micrometer\micrometer-commons\1.11.2\micrometer-commons-1.11.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-webmvc\6.0.11\spring-webmvc-6.0.11.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-devtools\3.1.2\spring-boot-devtools-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot\3.1.2\spring-boot-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.1.2\spring-boot-autoconfigure-3.1.2.jar;C:\Users\pgarc\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.1.2\spring-boot-starter-test-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-test\3.1.2\spring-boot-test-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.1.2\spring-boot-test-autoconfigure-3.1.2.jar;C:\Users\pgarc\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\pgarc\.m2\repository\net\minidev\json-smart\2.4.11\json-smart-2.4.11.jar;C:\Users\pgarc\.m2\repository\net\minidev\accessors-smart\2.4.11\accessors-smart-2.4.11.jar;C:\Users\pgarc\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\pgarc\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\pgarc\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\pgarc\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.3\junit-jupiter-5.9.3.jar;C:\Users\pgarc\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\pgarc\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\pgarc\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\pgarc\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\pgarc\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.3\junit-jupiter-params-5.9.3.jar;C:\Users\pgarc\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\pgarc\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\pgarc\.m2\repository\org\mockito\mockito-junit-jupiter\5.3.1\mockito-junit-jupiter-5.3.1.jar;C:\Users\pgarc\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\pgarc\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-core\6.0.11\spring-core-6.0.11.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-jcl\6.0.11\spring-jcl-6.0.11.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-test\6.0.11\spring-test-6.0.11.jar;C:\Users\pgarc\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\pgarc\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.1.2\spring-boot-starter-security-3.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\spring-aop\6.0.11\spring-aop-6.0.11.jar;C:\Users\pgarc\.m2\repository\org\springframework\security\spring-security-config\6.1.2\spring-security-config-6.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\security\spring-security-core\6.1.2\spring-security-core-6.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\security\spring-security-crypto\6.1.2\spring-security-crypto-6.1.2.jar;C:\Users\pgarc\.m2\repository\org\springframework\security\spring-security-web\6.1.2\spring-security-web-6.1.2.jar;C:\Users\pgarc\.m2\repository\io\jsonwebtoken\jjwt\0.9.1\jjwt-0.9.1.jar;C:\Users\pgarc\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\pgarc\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.2\jackson-annotations-2.15.2.jar;C:\Users\pgarc\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\pgarc\.m2\repository\org\projectlombok\lombok\1.18.28\lombok-1.18.28.jar;C:\Users\pgarc\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\pgarc\.m2\repository\org\mockito\mockito-core\5.3.1\mockito-core-5.3.1.jar;C:\Users\pgarc\.m2\repository\net\bytebuddy\byte-buddy\1.14.5\byte-buddy-1.14.5.jar;C:\Users\pgarc\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.5\byte-buddy-agent-1.14.5.jar;C:\Users\pgarc\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\pgarc\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\pgarc\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\pgarc\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\pgarc\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\pgarc\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\pgarc\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\pgarc\.m2\repository\de\flapdoodle\embed\de.flapdoodle.embed.mongo\4.7.1\de.flapdoodle.embed.mongo-4.7.1.jar;C:\Users\pgarc\.m2\repository\de\flapdoodle\embed\de.flapdoodle.embed.process\4.7.1\de.flapdoodle.embed.process-4.7.1.jar;C:\Users\pgarc\.m2\repository\de\flapdoodle\reverse\de.flapdoodle.reverse\1.5.3\de.flapdoodle.reverse-1.5.3.jar;C:\Users\pgarc\.m2\repository\de\flapdoodle\graph\de.flapdoodle.graph\1.2.3\de.flapdoodle.graph-1.2.3.jar;C:\Users\pgarc\.m2\repository\org\jgrapht\jgrapht-core\1.4.0\jgrapht-core-1.4.0.jar;C:\Users\pgarc\.m2\repository\org\jheaps\jheaps\0.11\jheaps-0.11.jar;C:\Users\pgarc\.m2\repository\de\flapdoodle\java8\de.flapdoodle.java8\1.3.2\de.flapdoodle.java8-1.3.2.jar;C:\Users\pgarc\.m2\repository\org\apache\commons\commons-lang3\3.12.0\commons-lang3-3.12.0.jar;C:\Users\pgarc\.m2\repository\org\apache\commons\commons-compress\1.23.0\commons-compress-1.23.0.jar;C:\Users\pgarc\.m2\repository\net\java\dev\jna\jna\5.13.0\jna-5.13.0.jar;C:\Users\pgarc\.m2\repository\net\java\dev\jna\jna-platform\5.13.0\jna-platform-5.13.0.jar;C:\Users\pgarc\.m2\repository\de\flapdoodle\de.flapdoodle.os-api\1.4.1\de.flapdoodle.os-api-1.4.1.jar;C:\Users\pgarc\.m2\repository\de\flapdoodle\embed\de.flapdoodle.embed.mongo.packageresolver\4.6.2\de.flapdoodle.embed.mongo.packageresolver-4.6.2.jar;C:\Users\pgarc\.m2\repository\de\flapdoodle\de.flapdoodle.os\1.4.1\de.flapdoodle.os-1.4.1.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\pgarc"/>
    <property name="user.language" value="es"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2023-01-17"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-19"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\pgarc\eclipse-workspace\Sprint05-02-JuegoDeDados\S05T02N03GarciaBarrosPablo"/>
    <property name="style.color" value="always"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\pgarc\AppData\Local\Temp\surefire12513639979341486411\surefirebooter-20230729132157558_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="19.0.2+7-44"/>
    <property name="user.name" value="pgarc"/>
    <property name="stdout.encoding" value="Cp1252"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\pgarc\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\pgarc\AppData\Local\Temp\"/>
    <property name="java.version" value="19.0.2"/>
    <property name="user.dir" value="C:\Users\pgarc\eclipse-workspace\Sprint05-02-JuegoDeDados\S05T02N03GarciaBarrosPablo"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="14692"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-19\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Program Files\MongoDB\Server\6.0\bin;C:\Program Files\mongosh-1.6.2-win32-x64\bin;C:\Program Files\Git\cmd;C:\Program Files\apache-maven-3.9.0\bin;C:\Users\pgarc\gradle-8.0\bin;C:\Program Files\Java\jdk-11\bin;C:\Windows\System32;C:\apache-maven-3.9.2\bin;C:\Program Files\Java\jdk-11\bin;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Users\pgarc\AppData\Local\Microsoft\WindowsApps;C:\Users\pgarc\AppData\Local\GitHubDesktop\bin;C:\Users\pgarc\.fly\bin;C:\Users\pgarc\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\pgarc\.dotnet\tools;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="19.0.2+7-44"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="63.0"/>
  </properties>
  <testcase name="newDiceRollTest" classname="cat.itacademy.barcelonactiva.GarciaBarros.Pablo.s05.t02.n03.repository.MySQLTest" time="0.559">
    <system-out><![CDATA[13:21:58.360 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [cat.itacademy.barcelonactiva.GarciaBarros.Pablo.s05.t02.n03.repository.MySQLTest]: MySQLTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
13:21:58.467 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration cat.itacademy.barcelonactiva.GarciaBarros.Pablo.s05.t02.n03.S05T02N03GarciaBarrosPabloApplication for test class cat.itacademy.barcelonactiva.GarciaBarros.Pablo.s05.t02.n03.repository.MySQLTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.2)

2023-07-29T13:21:58.826+02:00  INFO 14692 --- [           main] c.i.b.G.P.s.t.n03.repository.MySQLTest   : Starting MySQLTest using Java 19.0.2 with PID 14692 (started by pgarc in C:\Users\pgarc\eclipse-workspace\Sprint05-02-JuegoDeDados\S05T02N03GarciaBarrosPablo)
2023-07-29T13:21:58.827+02:00  INFO 14692 --- [           main] c.i.b.G.P.s.t.n03.repository.MySQLTest   : No active profile set, falling back to 1 default profile: "default"
2023-07-29T13:21:59.180+02:00  INFO 14692 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2023-07-29T13:21:59.181+02:00  INFO 14692 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-07-29T13:21:59.220+02:00  INFO 14692 --- [           main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface cat.itacademy.barcelonactiva.GarciaBarros.Pablo.s05.t02.n03.repository.IDiceRollMongoDB; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2023-07-29T13:21:59.292+02:00  INFO 14692 --- [           main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface cat.itacademy.barcelonactiva.GarciaBarros.Pablo.s05.t02.n03.repository.IPlayerMongoDB; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2023-07-29T13:21:59.318+02:00  INFO 14692 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 130 ms. Found 4 JPA repository interfaces.
2023-07-29T13:21:59.361+02:00  INFO 14692 --- [           main] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2023-07-29T13:21:59.552+02:00  INFO 14692 --- [           main] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:780954b5-a057-42f2-b8e5-571d94d9e03f;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2023-07-29T13:21:59.777+02:00  INFO 14692 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-29T13:21:59.820+02:00  INFO 14692 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.2.6.Final
2023-07-29T13:21:59.822+02:00  INFO 14692 --- [           main] org.hibernate.cfg.Environment            : HHH000406: Using bytecode reflection optimizer
2023-07-29T13:21:59.914+02:00  INFO 14692 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-07-29T13:22:00.042+02:00  INFO 14692 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-29T13:22:00.294+02:00  INFO 14692 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-07-29T13:22:00.861+02:00  INFO 14692 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: create table dice_roll (id_game integer generated by default as identity, first_roll integer, id_player integer, second_roll integer, win boolean, primary key (id_game))
Hibernate: create table player (id_player integer generated by default as identity, player_name varchar(255), registration_date timestamp(6), success_rate float(24), primary key (id_player))
Hibernate: create table roles (id integer generated by default as identity, name_rol varchar(255), primary key (id))
Hibernate: create table user_roles (user_id integer not null, rol_id integer not null)
Hibernate: create table users (id integer generated by default as identity, password varchar(255), username varchar(255), primary key (id))
Hibernate: alter table if exists player drop constraint if exists UK_m29ypr1y2a248u9xlb9dc7k6x
Hibernate: alter table if exists player add constraint UK_m29ypr1y2a248u9xlb9dc7k6x unique (player_name)
Hibernate: alter table if exists user_roles add constraint FKhibwdx7x4plssg6prkfvc3qv2 foreign key (rol_id) references roles
Hibernate: alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users
2023-07-29T13:22:00.911+02:00  INFO 14692 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-29T13:22:01.292+02:00  INFO 14692 --- [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2023-07-29T13:22:01.833+02:00  INFO 14692 --- [           main] c.i.b.G.P.s.t.n03.repository.MySQLTest   : Started MySQLTest in 3.305 seconds (process running for 4.169)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: select p1_0.id_player,p1_0.player_name,p1_0.registration_date,p1_0.success_rate from player p1_0
Hibernate: select d1_0.id_game,d1_0.first_roll,d1_0.id_player,d1_0.second_roll,d1_0.win from dice_roll d1_0
]]></system-out>
  </testcase>
  <testcase name="updateNameTest" classname="cat.itacademy.barcelonactiva.GarciaBarros.Pablo.s05.t02.n03.repository.MySQLTest" time="0.034">
    <system-out><![CDATA[Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: select p1_0.id_player,p1_0.player_name,p1_0.registration_date,p1_0.success_rate from player p1_0
Hibernate: update player set player_name=?,registration_date=?,success_rate=? where id_player=?
Hibernate: select p1_0.id_player,p1_0.player_name,p1_0.registration_date,p1_0.success_rate from player p1_0
Hibernate: select d1_0.id_game,d1_0.first_roll,d1_0.id_player,d1_0.second_roll,d1_0.win from dice_roll d1_0
]]></system-out>
  </testcase>
  <testcase name="newPlayerTest" classname="cat.itacademy.barcelonactiva.GarciaBarros.Pablo.s05.t02.n03.repository.MySQLTest" time="0.017">
    <system-out><![CDATA[Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: select p1_0.id_player,p1_0.player_name,p1_0.registration_date,p1_0.success_rate from player p1_0
Hibernate: select d1_0.id_game,d1_0.first_roll,d1_0.id_player,d1_0.second_roll,d1_0.win from dice_roll d1_0
]]></system-out>
  </testcase>
  <testcase name="deleteDiceRollsTest" classname="cat.itacademy.barcelonactiva.GarciaBarros.Pablo.s05.t02.n03.repository.MySQLTest" time="0.062">
    <system-out><![CDATA[Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: select p1_0.id_player,p1_0.player_name,p1_0.registration_date,p1_0.success_rate from player p1_0
Hibernate: delete from dice_roll where id_player=?
Hibernate: select count(*) from dice_roll d1_0 where d1_0.id_game=?
Hibernate: select p1_0.id_player,p1_0.player_name,p1_0.registration_date,p1_0.success_rate from player p1_0
Hibernate: select d1_0.id_game,d1_0.first_roll,d1_0.id_player,d1_0.second_roll,d1_0.win from dice_roll d1_0
]]></system-out>
  </testcase>
  <testcase name="getAllPlayersTest" classname="cat.itacademy.barcelonactiva.GarciaBarros.Pablo.s05.t02.n03.repository.MySQLTest" time="0.031">
    <system-out><![CDATA[Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: select p1_0.id_player,p1_0.player_name,p1_0.registration_date,p1_0.success_rate from player p1_0
Hibernate: select p1_0.id_player,p1_0.player_name,p1_0.registration_date,p1_0.success_rate from player p1_0
Hibernate: select d1_0.id_game,d1_0.first_roll,d1_0.id_player,d1_0.second_roll,d1_0.win from dice_roll d1_0
]]></system-out>
  </testcase>
  <testcase name="getLoserTest" classname="cat.itacademy.barcelonactiva.GarciaBarros.Pablo.s05.t02.n03.repository.MySQLTest" time="0.034">
    <system-out><![CDATA[Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: select p1_0.id_player,p1_0.player_name,p1_0.registration_date,(((sum(d1_0.win=true)*100)/count(d1_0.win))*1.0) from dice_roll d1_0 join player p1_0 on d1_0.id_player=p1_0.id_player group by p1_0.id_player,p1_0.player_name,p1_0.registration_date order by 4 fetch first 1 rows only
Hibernate: select p1_0.id_player,p1_0.player_name,p1_0.registration_date,p1_0.success_rate from player p1_0
Hibernate: select d1_0.id_game,d1_0.first_roll,d1_0.id_player,d1_0.second_roll,d1_0.win from dice_roll d1_0
]]></system-out>
  </testcase>
  <testcase name="getOnePlayerTest" classname="cat.itacademy.barcelonactiva.GarciaBarros.Pablo.s05.t02.n03.repository.MySQLTest" time="0.018">
    <system-out><![CDATA[Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: select p1_0.id_player,p1_0.player_name,p1_0.registration_date,p1_0.success_rate from player p1_0
Hibernate: select d1_0.id_game,d1_0.first_roll,d1_0.id_player,d1_0.second_roll,d1_0.win from dice_roll d1_0
]]></system-out>
  </testcase>
  <testcase name="testGetRanking" classname="cat.itacademy.barcelonactiva.GarciaBarros.Pablo.s05.t02.n03.repository.MySQLTest" time="0.021">
    <system-out><![CDATA[Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: select p1_0.id_player,p1_0.player_name,p1_0.registration_date,(((sum(d1_0.win=true)*100.0)/count(d1_0.win))*1.0) from dice_roll d1_0 join player p1_0 on d1_0.id_player=p1_0.id_player group by p1_0.id_player,p1_0.player_name,p1_0.registration_date
Hibernate: select p1_0.id_player,p1_0.player_name,p1_0.registration_date,p1_0.success_rate from player p1_0
Hibernate: select d1_0.id_game,d1_0.first_roll,d1_0.id_player,d1_0.second_roll,d1_0.win from dice_roll d1_0
]]></system-out>
  </testcase>
  <testcase name="getWinnerTest" classname="cat.itacademy.barcelonactiva.GarciaBarros.Pablo.s05.t02.n03.repository.MySQLTest" time="0.021">
    <system-out><![CDATA[Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into player (player_name,registration_date,success_rate,id_player) values (?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: insert into dice_roll (first_roll,id_player,second_roll,win,id_game) values (?,?,?,?,default)
Hibernate: select p1_0.id_player,p1_0.player_name,p1_0.registration_date,(((sum(d1_0.win=true)*100)/count(d1_0.win))*1.0) from dice_roll d1_0 join player p1_0 on d1_0.id_player=p1_0.id_player group by p1_0.id_player,p1_0.player_name,p1_0.registration_date order by 4 desc fetch first 1 rows only
Hibernate: select p1_0.id_player,p1_0.player_name,p1_0.registration_date,p1_0.success_rate from player p1_0
Hibernate: select d1_0.id_game,d1_0.first_roll,d1_0.id_player,d1_0.second_roll,d1_0.win from dice_roll d1_0
]]></system-out>
  </testcase>
</testsuite>